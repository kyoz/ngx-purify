@import '../../../../assets/scss/pure-style-functions';
@import '../pure-menu-item/pure-menu-item.component';

@mixin pure-menu-theme($theme) {
  $primary: map-get($theme, primary);
  $warn: map-get($theme, warn);
  $accent: map-get($theme, accent);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $is-dark: map-get($theme, is-dark);

  .pure-menu {

    // Global Styles for Menu Items
    @include pureMenuItemStyles();

    .group {
      .group-name {
        color: mat-color($primary, .9);
      }

      .group-name-replace {
        color: rgba(mat-color($foreground, icon), .2);
      }

      .pure-menu-content {
        .icon, .expand-icon, .replace-icon {
          color: mat-color($foreground, icon);
        }

        .badge, .badge.warn {
          background: mat-color($warn);
          color: get-text-color(mat-color($warn));
        }
        .badge.primary {
          background: mat-color($primary);
          color: get-text-color(mat-color($primary));
        }
        .badge.accent {
          background: mat-color($accent);
          color: get-text-color(mat-color($accent));
        }

        .name {
          color: mat-color($foreground, text);
        }
      }

      /**
        * LEVELS
        */

      .content.level-1, .content.level-2, .content.level-3, .content.level-4 {
        @if $is-dark==true {
          background: rgba(#212121, .6);
        } @else {
          background: rgba(#bdbdbd, .1);
        }

        // Hover Effect
        &:hover {
          @if $is-dark==true {
            background: rgba(#212121, .9);
          } @else {
            background: rgba(#bdbdbd, .2);
          }
        }
      }

      /**
       * CONTENT 
       */

      .content:hover {
        @if $is-dark==true {
          background: rgba(#212121, .4);
        }

        @else {
          background: rgba(#bdbdbd, .1);
        }
      }

      .content.active {
        background: mat-color($primary);
        span, mat-icon {
          color: get-text-color(mat-color($primary));
        }

        &:before { background: linear-gradient(180deg, rgba(0, 0, 0, .2) 0, transparent); }
        &:after { background: linear-gradient(180deg, transparent 0, rgba(0, 0, 0, .2)); }
        &:hover { background: mat-color($primary); }
      }

      /**
       * CHILDREN
       */

      .children {
        @if $is-dark==true {
          &:before { background: linear-gradient(180deg, rgba(0, 0, 0, .3) 0, transparent); }
          &:after { background: linear-gradient(180deg, transparent 0, rgba(0, 0, 0, .2)); }
        }

        @else {
          &:before { background: linear-gradient(180deg, rgba(0, 0, 0, .2) 0, transparent); }
          &:after { background: linear-gradient(180deg, transparent 0, rgba(0, 0, 0, .2)); }
        }
      }
    }
  }
}
